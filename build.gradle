plugins {
    id 'java'
    id 'checkstyle'
    id 'org.sonarqube' version '3.4.0.2513'
    id 'jacoco'
}

group 'com.svydovets'
version '1.0-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'

jar {
    archiveBaseName = 'svydovets-bibirnate'
}

ext {
    junitVersion = '5.9.0'
    mockitoVersion = '4.7.0'
    reflections = '0.10.2'
    lombok = '1.18.24'
    commonsLang3 = '3.12.0'
    checkstyle = '10.3.1'
    log4j = '2.18.0'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor "org.projectlombok:lombok:${lombok}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombok}"
    implementation "org.projectlombok:lombok:${lombok}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"

    implementation 'org.postgresql:postgresql:42.5.0'

}

test {
    useJUnitPlatform()
}

checkstyle {
    toolVersion "${checkstyle}"
    configFile file("${project.rootDir}/src/main/resources/config/checkstyle.xml")
    ignoreFailures = false
    maxWarnings = 0
}

checkstyleMain {
    print "${project.rootDir}"
    enabled = gradle.startParameter.taskNames.contains('checkstyleMain')
    source = 'src/main/java'
}

checkstyleTest {
    enabled = gradle.startParameter.taskNames.contains('checkstyleTest')
    source = 'src/test/java'
}

sonarqube {
    properties {
        property "sonar.projectKey", "svydovets-bibernate"
        property "sonar.organization", "svydovets-bibernate"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: 'com/svydovets/bibirnate/demo/**')
        }))
    }
}